{"version":3,"sources":["components/Navigation.jsx","config/theme.js","pages/Home.jsx","pages/Recipes.jsx","pages/Recipe.jsx","components/Cooktop.jsx","pages/InductionCooktop.jsx","pages/RiceCooker/CookerContext.js","pages/RiceCooker/PresetFlows.jsx","pages/RiceCooker/CookFlow/FlowContext.js","pages/RiceCooker/CookFlow/RicePresets.jsx","pages/RiceCooker/CookFlow/NeededMaterials.jsx","pages/RiceCooker/CookFlow/Confirmation.jsx","pages/RiceCooker/CookFlow/Schedule.jsx","pages/RiceCooker/CookFlow/index.jsx","pages/RiceCooker/Flows.jsx","pages/RiceCooker/index.jsx","config/mqttPubSub.js","pages/Dashboard.jsx","config/routes.js","App.jsx","serviceWorker.js","index.js"],"names":["styles","makeStyles","theme","grid","height","img","width","constants","navWidth","Navigation","classes","useTheme","Grid","container","direction","justify","alignItems","className","item","to","activeStyle","color","MenuBook","CalendarToday","alt","src","Kitchen","Settings","getTheme","themeRoot","createMuiTheme","spacing","palette","type","paletteType","background","default","primary","main","secondary","typography","fontFamily","join","overrides","MuiTypography","root","userSelect","MuiDivider","marginLeft","marginTop","windowWidth","windowHeight","wrapper","margin","padding","borderRadius","paddingTop","Home","Typography","variant","align","Divider","text","map","card","md","key","style","textDecoration","Card","elevation","CardMedia","image","CardContent","iconGridStyles","textAlign","recipeGridStyles","flexWrap","overflowX","transform","backgroundColor","iconList","caption","columnItem","buttonGrid","marginBottom","pulledItem","marginRight","forceFullHeight","backgroundRepeat","backgroundPosition","graphStyles","position","border","dots","top","left","InductionCooktop","props","graphClasses","graph","useRef","useEffect","ciclegraph","current","circleElements","childNodes","angle","dangle","length","i","clientWidth","push","Box","ref","content","media","CookerContext","React","createContext","MilkPreset","context","useContext","Button","disabled","flowSelected","onClick","setFlow","SoupPreset","MeatPreset","RicePreset","milk","soup","meat","something","FlowContext","cardStyles","tileWrapper","contentWrapper","paddingBottom","RicePresets","cardClasses","CardHeader","title","moveFlow","NeededMaterials","selectedPreset","Confirmation","Schedule","body","CookFlow","useState","pointer","setPointer","selectPreset","Wrapper","inner","Provider","value","borderBottomLeftRadius","borderBottomRightRadius","CookFlowContext","alignContent","cook","component","useStyles","ControlPubDictionary","SpicePubDictionary","StirrerPubDictionary","IngredientRackPubDictionary","LiquidStationPubDictionary","array2Obj","array","currentObj","shift","MotorController","state","currentSpicePosition","currentIngredientPosition","openWorkingModal","payload","stirrerState","message","topic","console","log","this","mqtt","publish","JSON","stringify","publishMessage","index","PubSubBridge","setState","station","volume","data","mqttProps","on","pop","m","pl","pr","overflow","Paper","modal","onClickOutside","closeModal","onEsc","pad","gap","Object","keys","p","mt","display","justifyContent","homeSpiceRack","publishDispenseSpice","pubishMove2PositionSpiceRack","publishToggleStirrer","publishMove2PositionIngredientRack","publishDispenseLiquid","Component","paths","path","exact","iconClasses","recipeClasses","mb","icon","mr","ml","recipesData","recipe","id","name","recipeId","recipes","getRecipe","useParams","backgroundImage","setFlowSelected","selectedFlow","selectFlow","flow","presetFlows","flows","flowKey","subscribe","App","ThemeProvider","CssBaseline","routes","route","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"2YAMMA,EAASC,aAAW,SAAAC,GAAK,MAAK,CAClCC,KAAM,CACJC,OAAQ,QAKVC,IAAK,CACHC,MAAM,GAAD,OAAKJ,EAAMK,UAAUC,SAArB,MACLJ,OAAO,GAAD,OAAKF,EAAMK,UAAUC,SAArB,WAIK,SAASC,IAEtB,IAAMC,EAAUV,EAAOW,eACvB,OACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,eACRC,WAAW,SACXC,UAAWP,EAAQP,MAGnB,kBAACS,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC,IAAD,CAASC,GAAG,WAAWC,YAAa,CAAEC,MAAO,QAC3C,kBAACC,EAAA,EAAD,QAGJ,kBAACV,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC,IAAD,CAASC,GAAG,aAAaC,YAAa,CAAEC,MAAO,QAC7C,kBAACE,EAAA,EAAD,QAGJ,kBAACX,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC,IAAD,CAASC,GAAG,IAAIC,YAAa,CAAEC,MAAO,QACpC,yBACEG,IAAI,WACJC,IAAI,2BACJR,UAAWP,EAAQL,QAIzB,kBAACO,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC,IAAD,CAASC,GAAG,UAAUC,YAAa,CAAEC,MAAO,QAC1C,kBAACK,EAAA,EAAD,QAGJ,kBAACd,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC,IAAD,CAASC,GAAG,OAAOC,YAAa,CAAEC,MAAO,QACvC,kBAACM,EAAA,EAAD,S,aCpDK,SAASC,EAAUC,GAChC,OAAOC,YAAe,CACpBC,QALmB,EAMnBC,QAAS,CACPC,KAAMJ,EAAUK,YAChBC,WAAY,CACVC,QAAmC,UAA1BP,EAAUK,YAA0B,OAAS,WAExDG,QAAS,CACPC,KAAM,WAGRC,UAAW,CACTD,KAAM,UACNC,UAAW,YAGfC,WAAY,CACVC,WAAY,CACV,UACA,gBACA,iBACA,SACA,SACA,cACAC,KAAK,MAETC,UAAW,CACTC,cAAe,CACbC,KAAM,CACJC,WAAY,SAGhBC,WAAY,CACVF,KAAM,CACJvC,MAAO,MACP0C,WAAY,MACZC,UAAU,GAAD,OAAKlB,GAAL,SAIfxB,UAAW,CACT2C,YA5CqB,KA6CrBC,aA5CsB,IA6CtB3C,SAAU,M,gDCnCVR,EAASC,aAAW,SAAAC,GAAK,MAAK,CAClCkD,QAAS,CACPC,OAAQ,OACRJ,UAAU,GAAD,OAAK/C,EAAM6B,QAAQ,GAAnB,MACT3B,OAAQ,IACRE,MAAO,IACPgD,QAAQ,GAAD,OAAKpD,EAAM6B,QAAQ,GAAnB,MACPwB,aAAa,GAAD,OAAKrD,EAAM6B,QAAQ,GAAnB,OAEd1B,IAAK,CACHD,OAAQ,EACRoD,WAAY,YAID,SAASC,IACtB,IAAMvD,EAAQS,cACRD,EAAUV,EAAOE,GAkCvB,OACE,oCAEE,kBAACwD,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,UAAlC,sCAGA,kBAACC,EAAA,EAAD,MACA,kBAACjD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAxClD,CACZ,CACEG,GAAI,oBACJd,IAAK,0BACLyD,KAAM,aAER,CACE3C,GAAI,cACJd,IAAK,yBACLyD,KAAM,eAER,CACE3C,GAAI,iBACJd,IAAK,gCACLyD,KAAM,kBAER,CACE3C,GAAI,aACJd,IAAK,iCACLyD,KAAM,mBAER,CACE3C,GAAI,iBACJd,IAAK,gCACLyD,KAAM,kBAER,CACE3C,GAAI,cACJd,IAAK,0BACLyD,KAAM,mBAYGC,KAAI,SAAAC,GAAI,OACb,kBAACpD,EAAA,EAAD,CAAMM,MAAI,EAAC+C,GAAI,EAAGC,IAAKF,EAAK7C,IAC1B,kBAAC,IAAD,CAASgD,MAAO,CAAEC,eAAgB,QAAUjD,GAAI6C,EAAK7C,IAEnD,kBAACkD,EAAA,EAAD,CAAMC,UAAW,EAAGrD,UAAWP,EAAQ0C,SACrC,kBAACmB,EAAA,EAAD,CAAWC,MAAOR,EAAK3D,IAAKY,UAAWP,EAAQL,MAC/C,kBAACoE,EAAA,EAAD,CAAab,MAAM,UACjB,kBAACF,EAAA,EAAD,CAAYC,QAAQ,WAAWK,EAAKF,e,oBCjEhDY,EAAiBzE,YAAW,CAChCE,KAAM,CACJG,MAAO,OACPF,OAAQ,OACRuE,UAAW,UAEbtE,IAAK,CACHC,MAAO,MACPF,OAAQ,MACRiD,OAAQ,SAINuB,EAAmB3E,aAAW,SAAAC,GAAK,MAAK,CAC5CC,KAAM,CACJ0E,SAAU,SACVC,UAAW,OAGXC,UAAW,iBAEbf,KAAM,CACJf,UAAU,GAAD,OAAK/C,EAAM6B,QAAQ,GAAnB,MACTzB,MAAO,IACPgD,QAAQ,GAAD,OAAKpD,EAAM6B,QAAQ,GAAnB,MACPiD,gBAAiB,eAEnB3E,IAAK,CACHD,OAAQ,EACRoD,WAAY,OACZD,aAAc,UAIZ0B,EAAW,CACf,CAAExD,IAAK,6BAA8ByD,QAAS,aAC9C,CAAEzD,IAAK,yBAA0ByD,QAAS,SAC1C,CAAEzD,IAAK,wBAAyByD,QAAS,UACzC,CAAEzD,IAAK,wBAAyByD,QAAS,QACzC,CAAEzD,IAAK,wBAAyByD,QAAS,QACzC,CAAEzD,IAAK,yBAA0ByD,QAAS,U,aC/CtClF,EAASC,aAAW,SAAAC,GAAK,MAAK,CAClCiF,WAAY,CACV7E,MAAO,QAET8E,WAAY,CACV9E,MAAO,OACP+E,aAAcnF,EAAM6B,QAAQ,IAE9BuD,WAAY,CACVhF,MAAO,MACPiF,YAAa,KACbvC,WAAY,MAEdwC,gBAAiB,CACfpF,OAAO,GAAD,OAAKF,EAAMK,UAAU4C,aAArB,OAER9C,IAAK,CACHD,OAAO,GAAD,OAAKF,EAAMK,UAAU4C,aAArB,MACNsC,iBAAkB,YAClBC,mBAAoB,cCvBxB,IAIMC,EAAc1F,aAAW,SAAAC,GAAK,MAAK,CACvC2C,KAAM,CACJ+C,SAAU,WACVtF,MAAO,IACPF,OAAQ,IACRiD,OAAQ,wBACRwC,OAAQ,kBACRtC,aAAc,OAEhBuC,KAAM,CACJF,SAAU,WACVG,IAAK,MACLC,KAAM,MACN1F,MAAM,GAAD,OAfM,GAeN,MACLF,OAAO,GAAD,OAhBK,GAgBL,MACNiD,OAAO,SAAD,OAjBK,GAiBL,WACNlB,WAAY,YACZoB,aAAc,WAGH,SAAS0C,EAAkBC,GACxC,IAAMC,EAAeR,EAAYhF,eAC3ByF,EAAQC,iBAAO,MAErBC,qBAAU,WAWR,IAVA,IAAMC,EAAaH,EAAMI,QACnBC,EAAiBF,EAAWG,WAE9BC,EAAQ,IAENC,EAAS,KAAOH,EAAeI,OAAS,GAKrCC,EAAI,EAAGA,EAAIL,EAAeI,OAAQC,IAAK,CAE9CH,GAASC,EADMH,EAAeK,GAEvB3C,MAAMY,UAAb,iBAAmC4B,EAAnC,0BAA0DJ,EAAWQ,YACnE,EAzCO,GAwCT,uBAE4BJ,EAF5B,WAID,IAGH,IADA,IAAMb,EAAO,GACJgB,EAAI,EAAGA,EAjDF,GAiDeA,IAC3BhB,EAAKkB,KAAK,kBAACC,EAAA,EAAD,CAAK/C,IAAG,cAAS4C,GAAK7F,UAAWkF,EAAaL,QAG1D,OACE,kBAACmB,EAAA,EAAD,CAAKhG,UAAWkF,EAAatD,KAAMqE,IAAKd,GACtC,kBAACa,EAAA,EAAD,CAAKhG,UAAWkF,EAAagB,SAC3B,kBAACzD,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,SACNO,MAAO,CAAElB,UAAW,MAAO8B,UAAW,qBAErCmB,EAAMiB,UAGVrB,GCtDP,IAAM9F,EAASC,aAAW,SAAAC,GAAK,MAAK,CAClC2C,KAAM,CACJI,UAAW/C,EAAM6B,QAAQ,GACzB3B,OAAQ,IACRE,MAAO,GACPgD,QAASpD,EAAM6B,QAAQ,IAEzBoF,QAAS,CACP7D,QAAQ,GAAD,OAAKpD,EAAM6B,QAAQ,GAAnB,kBAA+B7B,EAAM6B,QAAQ,GAA7C,sBAETqF,MAAO,CACLhH,OAAQ,EACRoD,WAAY,YCxBhB,IAEe6D,EAFOC,IAAMC,gBCI5B,SAASC,IACP,IAAMC,EAAUC,qBAAWL,GAC3B,OACE,kBAACzG,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACyG,EAAA,EAAD,CACEhE,QAAQ,WACRtC,MAAM,YACNuG,SAAUH,EAAQI,aAClBC,QAAS,WACPL,EAAQM,QAAQ,UALpB,SAcN,SAASC,IACP,IAAMP,EAAUC,qBAAWL,GAC3B,OACE,kBAACzG,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACyG,EAAA,EAAD,CACEhE,QAAQ,WACRtC,MAAM,YACNuG,SAAUH,EAAQI,aAClBC,QAAS,WACPL,EAAQM,QAAQ,UALpB,SAcN,SAASE,IACP,IAAMR,EAAUC,qBAAWL,GAC3B,OACE,oCACE,kBAACzG,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACyG,EAAA,EAAD,CACEhE,QAAQ,WACRtC,MAAM,YACNuG,SAAUH,EAAQI,aAClBC,QAAS,WACPL,EAAQM,QAAQ,UALpB,SAWF,kBAACnH,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACyG,EAAA,EAAD,CACEhE,QAAQ,WACRtC,MAAM,YACNuG,SAAUH,EAAQI,aAClBC,QAAS,WACPL,EAAQM,QAAQ,UALpB,UAeR,SAASG,IACP,IAAMT,EAAUC,qBAAWL,GAC3B,OACE,kBAACzG,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACyG,EAAA,EAAD,CACEhE,QAAQ,WACRtC,MAAM,YACNuG,SAAUH,EAAQI,aAClBC,QAAS,WACPL,EAAQM,QAAQ,UALpB,SAcS,OACbI,KAAM,CACJ9H,IAAK,0BACLyD,KAAM,OACNsB,WAAY,kBAACoC,EAAD,OAEdY,KAAM,CACJ/H,IAAK,+BACLyD,KAAM,OACNsB,WAAY,kBAAC4C,EAAD,OAEdK,KAAM,CACJhI,IAAK,0BACLyD,KAAM,OACNsB,WAAY,kBAAC6C,EAAD,OAEdK,UAAW,CACTjI,IAAK,0BACLyD,KAAM,OACNsB,WAAY,kBAAC8C,EAAD,Q,SC3GDK,EAFKjB,IAAMC,gBCYpBiB,EAAavI,aAAW,SAAAC,GAAK,MAAK,CACtCuI,YAAa,CACXnI,MAAO,GACPF,OAAQ,GACRiD,OAAO,GAAD,OAAKnD,EAAM6B,QAAQ,IAAnB,OAER2G,eAAgB,CACd/D,UAAW,SACXnB,WAAYtD,EAAM6B,QAAQ,GAC1B4G,cAAezI,EAAM6B,QAAQ,IAE/BqF,MAAO,CACLhH,OAAQ,GACRE,MAAO,GACP0C,WAAY,MACZ+B,UAAW,mBACX9B,UAAW/C,EAAM6B,QAAQ,QAId,SAAS6G,IACtB,IAAMC,EAAcL,EAAW7H,eACzB8G,EAAUC,qBAAWa,GA6B3B,OACE,oCACE,kBAACO,EAAA,EAAD,CAAYC,MAAM,8BAClB,kBAACtE,EAAA,EAAD,KACE,kBAAC7D,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UA/BpD,CACZ,CACEX,IAAK,+BACLyD,KAAM,aACNI,IAAK,SAEP,CACE7D,IAAK,+BACLyD,KAAM,aACNI,IAAK,SAEP,CACE7D,IAAK,+BACLyD,KAAM,aACNI,IAAK,SAEP,CACE7D,IAAK,iCACLyD,KAAM,eACNI,IAAK,WAEP,CACE7D,IAAK,gCACLyD,KAAM,cACNI,IAAK,WAQMH,KAAI,SAAAC,GAAI,OACb,kBAACiD,EAAA,EAAD,CAAKa,QAAS,kBAAML,EAAQuB,SAAShF,EAAKE,MAAMA,IAAKF,EAAKF,MACxD,kBAAClD,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACmD,EAAA,EAAD,CAAMpD,UAAW4H,EAAYJ,aAC3B,kBAAClE,EAAA,EAAD,CAAWC,MAAOR,EAAK3D,IAAKY,UAAW4H,EAAYzB,QACnD,kBAAC3C,EAAA,EAAD,CAAaxD,UAAW4H,EAAYH,gBAClC,kBAAChF,EAAA,EAAD,CAAYC,QAAQ,WAAWK,EAAKF,gBCtEzC,SAASmF,EAAiB/C,GAEvC,IAAMuB,EAAUC,qBAAWa,GAC3B,OACE,oCACE,kBAACO,EAAA,EAAD,CAAYC,MAAM,0BAClB,kBAACtE,EAAA,EAAD,KACE,kBAACf,EAAA,EAAD,gCAAiCwC,EAAMgD,iBACvC,kBAACvB,EAAA,EAAD,CACEhE,QAAQ,WACRmE,QAAS,WACPL,EAAQuB,SAAS,eAHrB,cCVO,SAASG,IACtB,IAAM1B,EAAUC,qBAAWa,GAE3B,OACE,kBAAC9D,EAAA,EAAD,KACE,kBAACf,EAAA,EAAD,CAAYC,QAAQ,SAApB,oGAIA,kBAAC/C,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASC,WAAW,UAC1C,kBAACJ,EAAA,EAAD,CAAMM,MAAI,EAACiD,MAAO,CAAE7D,MAAO,SACzB,kBAACqH,EAAA,EAAD,CACEhE,QAAQ,WACRmE,QAAS,WACPL,EAAQuB,SAAS,UAEnB3H,MAAM,aALR,UAUF,kBAACT,EAAA,EAAD,CAAMM,MAAI,EAACiD,MAAO,CAAE7D,MAAO,SACzB,kBAACqH,EAAA,EAAD,CACEhE,QAAQ,WACRmE,QAAS,WACPL,EAAQuB,SAAS,cAHrB,eCvBK,SAASI,IAEtB,OACE,kBAAC3E,EAAA,EAAD,KACE,kBAACf,EAAA,EAAD,CAAY2F,KAAK,MAAjB,2CACA,kBAAC3F,EAAA,EAAD,CAAY2F,KAAK,SAAjB,wBAA2C,EAA3C,mBCIN,IAAMrJ,GAASC,aAAW,SAAAC,GAAK,MAAK,CAClCkD,QAAS,CACPC,OAAQ,OACRJ,UAAU,GAAD,OAAK/C,EAAM6B,QAAQ,GAAnB,MACTzB,MAAO,QACP,oBAAqB,CACnB2C,UAAU,GAAD,OAAK/C,EAAM6B,QAAQ,GAAnB,MACTzB,MAAO,aAKE,SAASgJ,KACtB,IAAM7B,EAAUC,qBAAWL,GACrB3G,EAAUV,GAAOW,eAFW,EAIJ4I,mBAAS,GAJL,mBAI3BC,EAJ2B,KAIlBC,EAJkB,OAKKF,mBAAS,MALd,mBAK3BL,EAL2B,KAKXQ,EALW,KAOlC,SAASV,EAAUK,GACD,IAAZG,EAMFC,EAAW,GACU,IAAZD,EAETC,EAAW,GACU,IAAZD,IAETE,EAAaL,GACbI,EAAW,IAIf,SAASE,EAASC,GAChB,OACE,kBAAC,EAAYC,SAAb,CACEC,MAAO,CACLd,aAGF,kBAAC3E,EAAA,EAAD,CAAMpD,UAAWP,EAAQ0C,SACvB,kBAACuE,EAAA,EAAD,CACEG,QAAS,WAEPL,EAAQM,QAAQ,OAElBpE,QAAQ,YACRtC,MAAM,YACN8C,MAAO,CACLlB,UAAW,EACX8G,uBAAwB,EACxBC,wBAAyB,IAV7B,UAeCJ,IAMT,OAAgB,IAAZJ,EACKG,EAAQ,kBAACf,EAAD,OACM,IAAZY,EACFG,EAAQ,kBAACV,EAAD,CAAiBC,eAAgBA,KAC3B,IAAZM,EACFG,EAAQ,kBAACR,EAAD,OACM,IAAZK,EACFG,EAAQ,kBAACP,EAAD,YADV,EC9ET,SAASa,KACP,OACE,kBAAChD,EAAA,EAAD,CAAK3G,MAAM,OAAOF,OAAO,OAAO8J,aAAa,UAC3C,kBAACZ,GAAD,OAKS,QACba,KAAM,CACJC,UAAW,kBAACH,GAAD,QCGTI,GAAYpK,aAAW,SAAAC,GAAK,MAAK,CACrC2C,KAAM,CACJI,UAAW/C,EAAM6B,QAAQ,GACzB3B,OAAQ,IACRE,MAAO,GACPgD,QAASpD,EAAM6B,QAAQ,IAEzBoF,QAAS,CACP7D,QAAQ,GAAD,OAAKpD,EAAM6B,QAAQ,GAAnB,kBAA+B7B,EAAM6B,QAAQ,GAA7C,sBAETqF,MAAO,CACLhH,OAAQ,EACRoD,WAAY,Y,8DCdhB,IAAM8G,GAGa,KAHbA,GAIY,KAJZA,GAKc,KASdC,GAEc,IAFdA,GAIiB,IAJjBA,GAKiB,IAsBjBC,GAEY,EAYZC,GAGmB,IAYnBC,GAEiB,EAFjBA,GAGiB,EAwDvB,SAASC,GAAWC,GAClB,IAAMC,EAAa,GAInB,OAFAA,EADeD,EAAME,SACrB,aAAyBF,GAElBC,E,cCjJHE,G,oDACJ,WAAa7E,GAAQ,IAAD,+BAClB,cAAMA,IAED8E,MAAQ,CACXC,qBAAsB,EACtBC,0BAA2B,EAC3BC,kBAAkB,EAClBC,QAAS,GACTC,cAAc,GARE,E,4DAYJC,EAASC,GAGvBC,QAAQC,IAAa,0BAA4BH,GAChCI,KAAKxF,MAAdyF,KACHC,QAFgB,0BAEDC,KAAKC,UAAUR,M,sCAInCI,KAAKK,eDmJApB,GAAU,CACfL,GACAC,Q,6CArBG,IAAwByB,EC5H3BN,KAAKK,gBD4HsBC,EC3HEN,KAAKV,MAAMC,qBD4HnCN,GAAU,CACfL,GACAC,GACAyB,EC/H8D,GAAI,Q,mDAItCpG,GAC5B,IAAM0F,ED+IH,SAAiC1F,GACtC,OAAO+E,GAAU,CACfL,GACAC,GACA3E,ICnJgBqG,CAAoCrG,GACpD8F,KAAKK,eAAeT,K,yDAGc1F,GAClC,IAAM0F,EDkJH,SAAsC1F,GAC3C,OAAO+E,GAAU,CACfL,GACAG,GACA7E,ICtJgBqG,CAAyCrG,GACzD8F,KAAKK,eAAeT,K,6CAOpB,GADAI,KAAKQ,SAAS,CAAEb,cAAeK,KAAKV,MAAMK,eACtCK,KAAKV,MAAMK,aAAc,CAC3B,IAAMC,EDsMHX,GAAU,CACfL,GACAE,GACA,ICxMEkB,KAAKK,eAAeT,OACf,CACL,IAAMA,ED2LHX,GAAU,CACfL,GACAE,GACA,IC7LEkB,KAAKK,eAAeT,M,4CAIDa,EAASC,GACd,QAAZD,EACFT,KAAKK,eDuIJ,SAAsBK,GAC3B,OAAOzB,GAAU,CACfL,GACAI,GACA0B,IC3IsBH,CAAyBG,IAE7CV,KAAKK,eD6IJ,SAAwBK,GAC7B,OAAOzB,GAAU,CACfL,GACAI,GACA0B,ICjJsBH,CAA2BG,M,0CAI7B,IAAD,SAEeV,KAAKxF,MAFpB,EAEXmG,KAFW,EAELC,UAFK,EAEMX,KACpBY,GAAG,WAAW,SAAAF,GACjBb,QAAQC,IAAI,EAAKvF,MAAMmG,MACvB,IAAMjB,EAAU,EAAKlF,MAAMmG,KAAKG,MAChChB,QAAQC,IAAIL,Q,mCAYdM,KAAKQ,SAAL,6BAAmBR,KAAKV,OAAxB,IAA+BG,kBAAkB,O,+BAGxC,IAAD,OAER,OACE,kBAAClE,EAAA,EAAD,CAAK7G,OjBxFiB,IiBwFKqM,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,SAAS,UACtDlB,KAAKV,MAAMG,kBACV,kBAAC0B,GAAA,EAAD,CACEjH,SAAS,SACTkH,OAAK,EACLC,eAAgBrB,KAAKsB,WACrBC,MAAOvB,KAAKsB,YAEZ,kBAAC/F,EAAA,EAAD,CAAKiG,IAAI,SAASC,IAAI,QAAQ7M,MAAM,UAClC,kBAACoD,EAAA,EAAD,CAAYC,QAAQ,KAAKN,OAAO,QAAhC,wBAIA,kBAAC4D,EAAA,EAAD,CAAKkG,IAAI,QAAQvJ,MAAM,UACpBwJ,OAAOC,KAAK3B,KAAKV,MAAMI,SAASrH,KAAI,SAAAG,GACnC,OACE,kBAACR,EAAA,EAAD,CAAYQ,IAAKA,GACf,gCAASA,GACT,kCAAQ,EAAK8G,MAAMI,QAAQlH,IAF7B,IAE0C,oCAStD,kBAAC2I,GAAA,EAAD,CAAOvI,UAAW,EAAGH,MAAO,CAAElB,UAAW,SACvC,kBAACgE,EAAA,EAAD,CAAKqG,EAAG,GACN,kBAAC5J,EAAA,EAAD,4BAA6BgI,KAAKV,MAAMC,uBACxC,kBAAChE,EAAA,EAAD,CACEsG,GAAI,EACJzM,UAAU,MACVqD,MAAO,CACLqJ,QAAS,OACT3I,SAAU,OACV4I,eAAgB,kBAGlB,kBAAC9F,EAAA,EAAD,CAAQhE,QAAQ,WAAWmE,QAAS,kBAAM,EAAK4F,kBAA/C,QAGA,kBAAC/F,EAAA,EAAD,CACEhE,QAAQ,WACRmE,QAAS,kBAAM,EAAK6F,yBAFtB,aAOF,kBAAC1G,EAAA,EAAD,CAAKnG,UAAU,MAAM0M,QAAQ,OAAO3I,SAAS,OAAO4H,EAAG,GACpD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAI1I,KAAI,SAAA6B,GACnC,OACE,kBAAC+B,EAAA,EAAD,CACEzD,IAAK0B,EACLjC,QAAQ,YACRQ,MAAO,CAAEd,OAAQ,EAAGC,QAAS,EAAGhD,MAAO,IACvCwH,QAAS,kBAAM,EAAK8F,6BAA6BhI,KAEhDA,SAOb,kBAACiH,GAAA,EAAD,CAAOvI,UAAW,EAAGH,MAAO,CAAElB,UAAW,SACvC,kBAACgE,EAAA,EAAD,CAAKqG,EAAG,GACN,kBAAC5J,EAAA,EAAD,iCAAkCgI,KAAKV,MAAME,4BAC7C,kBAACjE,EAAA,EAAD,CACEsG,GAAI,EACJzM,UAAU,MACVqD,MAAO,CACLqJ,QAAS,OACT3I,SAAU,OACV4I,eAAgB,kBAGlB,kBAAC9F,EAAA,EAAD,CACEhE,QAAQ,WACRmE,QAAS,kBAAM,EAAKiE,eAAe,GAAI,MAFzC,QAMA,kBAACpE,EAAA,EAAD,CACEhE,QAAQ,WACRmE,QAAS,kBAAM,EAAK+F,yBAFtB,aAOF,kBAAC5G,EAAA,EAAD,CAAKnG,UAAU,MAAM0M,QAAQ,OAAO3I,SAAS,OAAO4H,EAAG,GACpD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG1I,KAAI,SAAA6B,GAC5B,OACE,kBAAC+B,EAAA,EAAD,CACEG,QAAS,kBACP,EAAKgG,mCAAmClI,IAE1C1B,IAAK0B,EACLjC,QAAQ,YACRQ,MAAO,CAAEd,OAAQ,EAAGC,QAAS,EAAGhD,MAAO,KAEtCsF,SAOb,kBAACiH,GAAA,EAAD,CAAOvI,UAAW,EAAGH,MAAO,CAAElB,UAAW,SACvC,kBAACgE,EAAA,EAAD,CAAKqG,EAAG,GACN,kBAAC5J,EAAA,EAAD,oBACA,kBAACuD,EAAA,EAAD,CACEsG,GAAI,EACJzM,UAAU,MACVqD,MAAO,CAAEqJ,QAAS,OAAQ3I,SAAU,OAAQ4I,eAAgB,KAE3D,CAAC,GAAI,GAAI,IAAI1J,KAAI,SAAAqI,GAChB,OACE,kBAACzE,EAAA,EAAD,CACEzD,IAAKkI,EACLzI,QAAQ,YACRQ,MAAO,CAAEd,OAAQ,EAAGC,QAAS,EAAGhD,MAAO,IACvCwH,QAAS,kBAAM,EAAKiG,sBAAsB,MAAO3B,KAJnD,UAMMA,EANN,aAaV,kBAACS,GAAA,EAAD,CAAOvI,UAAW,EAAGH,MAAO,CAAElB,UAAW,SACvC,kBAACgE,EAAA,EAAD,CAAKqG,EAAG,GACN,kBAAC5J,EAAA,EAAD,sBACA,kBAACuD,EAAA,EAAD,CACEsG,GAAI,EACJzM,UAAU,MACVqD,MAAO,CAAEqJ,QAAS,OAAQ3I,SAAU,OAAQ4I,eAAgB,KAE3D,CAAC,GAAI,GAAI,IAAI1J,KAAI,SAAAqI,GAChB,OACE,kBAACzE,EAAA,EAAD,CACEzD,IAAKkI,EACLzI,QAAQ,YACRQ,MAAO,CAAEd,OAAQ,EAAGC,QAAS,EAAGhD,MAAO,IACvCwH,QAAS,kBAAM,EAAKiG,sBAAsB,QAAS3B,KAJrD,UAMMA,EANN,aAaV,kBAACnF,EAAA,EAAD,CAAK7G,OAAO,e,GAhPU4N,aCyCfC,GAtCD,CACZ,CACEC,KAAM,IACNC,OAAO,EACP/D,UAAW3G,GAEb,CACEyK,KAAM,WACNC,OAAO,EACP/D,UhBwCW,WAAqB,IAAD,EACHb,mBAAS,IADN,mBAE3B6E,GAF2B,UAEb1J,EAAe/D,gBAC7B0N,EAAgBzJ,EAAiBjE,eAUvC,OACE,kBAACsG,EAAA,EAAD,CAAKwF,EAAG,GACN,kBAACxF,EAAA,EAAD,CAAKsG,GAAI,EAAGe,GAAI,GACd,kBAACrH,EAAA,EAAD,CAAKqH,GAAI,GACP,kBAAC5K,EAAA,EAAD,CAAYC,QAAQ,MAApB,sCAIF,kBAAC/C,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,UAEViE,EAASlB,KAAI,SAAAwK,GAAI,OAChB,kBAACtH,EAAA,EAAD,CACE/C,IAAKqK,EAAKrJ,QACV3B,aAAa,MACbsC,OAAQ,EACRzF,OAAQ,GACRE,MAAO,GACPmM,EAAG,GAEH,kBAAC7L,EAAA,EAAD,CAAMM,MAAI,EAACD,UAAWmN,EAAYjO,MAChC,yBACEsB,IAAK8M,EAAK9M,IACVR,UAAWmN,EAAY/N,IACvBmB,IAAK+M,EAAKrJ,UAEZ,kBAACxB,EAAA,EAAD,CAAYC,QAAQ,WAAW4K,EAAKrJ,gBAM9C,kBAAC+B,EAAA,EAAD,KACE,kBAACvD,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBAEA,kBAACsD,EAAA,EAAD,CAAKuH,IAAK,EAAGC,IAAK,EAAGlB,IAAK,GACxB,kBAAC3M,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,SACXC,UAAWoN,EAAclO,MAjD1BuO,EAmDe3K,KAAI,SAAA4K,GAAM,OACtB,kBAAC/N,EAAA,EAAD,CAAMM,MAAI,EAACgD,IAAKyK,EAAOC,IACrB,kBAAC,IAAD,CAAMzN,GAAE,mBAAcwN,EAAOC,KAC3B,kBAACvK,EAAA,EAAD,CAAMpD,UAAWoN,EAAcrK,KAAMM,UAAW,GAC9C,kBAACC,EAAA,EAAD,CACEC,MAAOmK,EAAOlN,IACdR,UAAWoN,EAAchO,MAE3B,kBAACoE,EAAA,EAAD,CAAab,MAAM,UACjB,kBAACF,EAAA,EAAD,CAAYC,QAAQ,WAAWgL,EAAOE,mBgB1G1D,CACEX,KAAM,qBACN9D,UfkBW,WACb,IAAM1J,EAAUV,EAAOE,GAEjByO,EAZR,SAAoBG,GAClB,IAAK,IAAIhI,EAAI,EAAGA,EAAIiI,EAAQlI,OAAQC,IAClC,GAAIiI,EAAQjI,GAAG8H,KAAOE,EACpB,OAAOC,EAAQjI,GAGnB,OAAO,EAMQkI,CADEC,cAAYH,UAG7B,OAAIH,EAGA,kBAAC1H,EAAA,EAAD,CAAKwF,GAAI,EAAGxL,UAAWP,EAAQ8E,iBAC7B,kBAAC5E,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,UAAWP,EAAQ8E,iBAEnB,kBAAC5E,EAAA,EAAD,CAAMM,MAAI,EAAC+C,GAAI,GACb,kBAACgD,EAAA,EAAD,CACE2F,SAAS,SACT3L,UAAWP,EAAQL,IACnB8D,MAAO,CAAE+K,gBAAgB,OAAD,OAASP,EAAOlN,IAAhB,OAExB,kBAACb,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,gBACRC,WAAW,SACXC,UAAWP,EAAQ8E,iBAEnB,kBAAC5E,EAAA,EAAD,CAAMM,MAAI,EAACD,UAAWP,EAAQyE,YAC5B,kBAACzB,EAAA,EAAD,iCAEF,kBAAC9C,EAAA,EAAD,CAAMM,MAAI,EAACD,UAAWP,EAAQyE,YAC5B,kBAACvE,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,UAAWP,EAAQ0E,YAEnB,kBAACxE,EAAA,EAAD,CAAMM,MAAI,EAACD,UAAWP,EAAQ4E,YAC5B,kBAACqC,EAAA,EAAD,CACEhE,QAAQ,YACRtC,MAAM,YACN8C,MAAO,CAAE7D,MAAO,SAHlB,aAQF,kBAACM,EAAA,EAAD,CAAMM,MAAI,EAACD,UAAWP,EAAQ4E,YAC5B,kBAACqC,EAAA,EAAD,CACEhE,QAAQ,YACRtC,MAAM,YACN8C,MAAO,CAAE7D,MAAO,SAHlB,uBAaZ,kBAACM,EAAA,EAAD,CAAMM,MAAI,EAAC+C,GAAI,GACb,kBAACP,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAC5B+K,EAAOE,SAOX,kBAACnL,EAAA,EAAD,CAAYC,QAAQ,MAApB,SexFT,CACEuK,KAAM,oBACNC,OAAO,EACP/D,UbGW,WACb,IAAM1J,EAAUV,EAAOE,GAmBvB,OACE,oCACE,kBAACwD,EAAA,EAAD,CAAYE,MAAM,SAASD,QAAQ,KAAKtC,MAAM,aAA9C,qBAGA,kBAACwC,EAAA,EAAD,MACA,kBAACjD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,cAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,EAAC+C,GAAI,GACb,kBAACrD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,aACRC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC,EAAD,CAASiG,QAAQ,aAEnB,kBAACvG,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACN,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXe,QAAS,GAET,kBAACnB,EAAA,EAAD,CAAMM,MAAI,GACR,yBACEiD,MAAO,CAAE7D,MAAO,OAAQF,OAAQ,QAChCqB,IAAI,4BACJD,IAAI,UAGR,kBAACZ,EAAA,EAAD,CAAMM,MAAI,GACR,yBACEiD,MAAO,CAAE7D,MAAO,OAAQF,OAAQ,QAChCqB,IAAI,4BACJD,IAAI,UAGR,kBAACZ,EAAA,EAAD,CAAMM,MAAI,GACR,yBACEiD,MAAO,CAAE7D,MAAO,OAAQF,OAAQ,QAChCqB,IAAI,0BACJD,IAAI,cAOhB,kBAACZ,EAAA,EAAD,CAAMM,MAAI,EAAC+C,GAAI,GACb,kBAACgD,EAAA,EAAD,CAAKqG,EAAG,GACN,kBAAC5J,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAA/B,WAGA,kBAAChD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,aACXe,QAAS,GAnFP,CACZ,CACE1B,IAAK,0BACLyD,KAAM,eAER,CACEzD,IAAK,+BACLyD,KAAM,QAER,CACEzD,IAAK,0BACLyD,KAAM,WAER,CACEzD,IAAK,0BACLyD,KAAM,SAsESC,KAAI,SAAAC,GAAI,OACb,kBAACpD,EAAA,EAAD,CAAMM,MAAI,EAACgD,IAAKF,EAAKF,MACnB,kBAACO,EAAA,EAAD,CAAMpD,UAAWP,EAAQmC,MACvB,kBAAC0B,EAAA,EAAD,CAAWtD,UAAWP,EAAQ0G,MAAO5C,MAAOR,EAAK3D,MACjD,kBAACoE,EAAA,EAAD,CAAaxD,UAAWP,EAAQyG,QAASvD,MAAM,UAC7C,kBAACF,EAAA,EAAD,CAAYC,QAAQ,WAAWK,EAAKF,mBa7FxD,CACEoK,KAAM,cACNC,OAAO,EACP/D,UHGW,WACb,IAAMlK,EAAQS,cACRD,EAAU2J,GAAUnK,GAFU,EAGIqJ,oBAAS,GAHb,mBAG7B1B,EAH6B,KAGfsH,EAHe,OAIG5F,mBAAS,QAJZ,mBAI7BL,EAJ6B,KAIbQ,EAJa,OAKDH,mBAAS,MALR,mBAK7B6F,EAL6B,KAKfC,EALe,KAuBpC,OACE,kBAAC,EAAcxF,SAAf,CACEC,MAAO,CACLZ,iBACAkG,eACAvH,eACAE,QAtBN,SAAkBuH,GAChB9D,QAAQC,IAAR,6BAAkC6D,IAC7BA,GASHH,GAAgB,GAChBE,EAAWC,KAPXH,GAAgB,GAChBE,EAAW,MAEX3F,EAAa,YAiBb,kBAAChG,EAAA,EAAD,CAAYE,MAAM,SAASD,QAAQ,KAAKtC,MAAM,aAA9C,eAGA,kBAACwC,EAAA,EAAD,MACA,kBAACjD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,cAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,EAAC+C,GAAI,GACb,kBAACrD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,aACRC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMM,MAAI,GACR,kBAAC,EAAD,CAASiG,QAAQ,aAEnB,kBAACvG,EAAA,EAAD,CAAMM,MAAI,GACR,kBAACN,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXe,QAAS,GAERwN,EAAYrG,GAAgB9D,eAKrC,kBAACxE,EAAA,EAAD,CAAMM,MAAI,EAAC+C,GAAI,GACZ4D,EACC2H,GAAMJ,GAAchF,UAEpB,kBAACnD,EAAA,EAAD,CAAKqG,EAAG,GACN,kBAAC5J,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAA/B,WAGA,kBAAChD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,aACXe,QAAS,GAERqL,OAAOC,KAAKkC,GAAaxL,KAAI,SAAA0L,GAAO,OACnC,kBAAC7O,EAAA,EAAD,CAAMM,MAAI,EAACgD,IAAKqL,EAAYE,GAAS3L,MACnC,kBAACO,EAAA,EAAD,CACEpD,UAAWP,EAAQmC,KACnBiF,QAAS,kBAAM4B,EAAa+F,IAC5BtL,MAEEiL,IAAiBK,EACb,CAAEzK,gBAAiB9E,EAAM8B,QAAQO,UAAUD,MAC3C,MAGN,kBAACiC,EAAA,EAAD,CACEtD,UAAWP,EAAQ0G,MACnB5C,MAAO+K,EAAYE,GAASpP,MAE9B,kBAACoE,EAAA,EAAD,CAAaxD,UAAWP,EAAQyG,QAASvD,MAAM,UAC7C,kBAACF,EAAA,EAAD,CAAYC,QAAQ,WACjB4L,EAAYE,GAAS3L,mBGnG9C,CACEoK,KAAM,OACN9D,UDuNWsF,oBAAU,CACvBnE,MAAO,wBADMmE,CAEZ3E,KCvND,CACEmD,KAAM,GACN9D,UAAW3G,ICuBAkM,OAnDf,WACE,IAAMzP,EAAQ0B,EAAS,CAAEM,YAAa,UACtC,OACE,kBAAC,YAAD,CAAWoK,UAAU,uBACnB,kBAACsD,EAAA,EAAD,CAAe1P,MAAOA,GACpB,kBAAC2P,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAACjP,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,aACXmD,MAAO,CACL/D,OAAQF,EAAMK,UAAU4C,eAG1B,kBAACvC,EAAA,EAAD,CAAMM,MAAI,EAACiD,MAAO,CAAE/D,OAAQ,QAAU6D,GAAI,GACxC,kBAACxD,EAAD,OAEF,kBAACG,EAAA,EAAD,CACEM,MAAI,EACJ+C,GAAI,GACJE,MAAO,CACL/D,OAAQ,SAIV,kBAAC6G,EAAA,EAAD,CACEqG,EAAG,EACHlN,OAAQF,EAAMK,UAAU4C,aACxByJ,SAAS,UAET,kBAAC,IAAD,KACGkD,GAAO/L,KAAI,SAAAgM,GAAK,OACf,kBAAC,IAAD,CACE7L,IAAK6L,EAAM7B,KACXC,MAAO4B,EAAM5B,MACbD,KAAM6B,EAAM7B,KACZ9D,UAAW2F,EAAM3F,uBCtCnB4F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzF,QAAQyF,MAAMA,EAAM3F,a","file":"static/js/main.c2c1ed84.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport { Grid, makeStyles, useTheme } from '@material-ui/core'\nimport { CalendarToday, Kitchen, Settings, MenuBook } from '@material-ui/icons'\n\nconst styles = makeStyles(theme => ({\n  grid: {\n    height: '100%'\n    // position: 'fixed',\n    // left: '0',\n    // bottom: '0',\n  },\n  img: {\n    width: `${theme.constants.navWidth}px`,\n    height: `${theme.constants.navWidth}px`\n  }\n}))\n\nexport default function Navigation () {\n  // const [activeTab, setActiveTab] = useState(0)\n  const classes = styles(useTheme())\n  return (\n    <Grid\n      container\n      direction='column'\n      justify='space-around'\n      alignItems='center'\n      className={classes.grid}\n    >\n      {/* TODO: Set activeStyle to work on activeTab */}\n      <Grid item>\n        <NavLink to='/recipes' activeStyle={{ color: 'red' }}>\n          <MenuBook />\n        </NavLink>\n      </Grid>\n      <Grid item>\n        <NavLink to='/scheduler' activeStyle={{ color: 'red' }}>\n          <CalendarToday />\n        </NavLink>\n      </Grid>\n      <Grid item>\n        <NavLink to='/' activeStyle={{ color: 'red' }}>\n          <img\n            alt='monogram'\n            src='/assets/monogramDark.png'\n            className={classes.img}\n          />\n        </NavLink>\n      </Grid>\n      <Grid item>\n        <NavLink to='/pantry' activeStyle={{ color: 'red' }}>\n          <Kitchen />\n        </NavLink>\n      </Grid>\n      <Grid item>\n        <NavLink to='/dev' activeStyle={{ color: 'red' }}>\n          <Settings />\n        </NavLink>\n      </Grid>\n    </Grid>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core'\n\nexport const spacing = 8\nexport const windowWidth = 1024\nexport const windowHeight = 600\nexport default function getTheme (themeRoot) {\n  return createMuiTheme({\n    spacing: spacing,\n    palette: {\n      type: themeRoot.paletteType,\n      background: {\n        default: themeRoot.paletteType === 'light' ? '#fff' : '#111111'\n      },\n      primary: {\n        main: '#FFFFFF'\n        // secondary: '#FF5800'\n      },\n      secondary: {\n        main: '#FF5800',\n        secondary: '#FDFDFD'\n      }\n    },\n    typography: {\n      fontFamily: [\n        'Poppins',\n        '-apple-system',\n        'Helvetica Neue',\n        'Roboto',\n        'Ubuntu',\n        'sans-serif'\n      ].join(',')\n    },\n    overrides: {\n      MuiTypography: {\n        root: {\n          userSelect: 'none'\n        }\n      },\n      MuiDivider: {\n        root: {\n          width: '80%',\n          marginLeft: '10%',\n          marginTop: `${spacing * 2}px`\n        }\n      }\n    },\n    constants: {\n      windowWidth,\n      windowHeight,\n      navWidth: 50\n    }\n  })\n}\n","import React from 'react'\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Grid,\n  Typography,\n  Divider,\n  useTheme,\n  makeStyles\n} from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\n\nconst styles = makeStyles(theme => ({\n  wrapper: {\n    margin: 'auto',\n    marginTop: `${theme.spacing(3)}px`,\n    height: 200,\n    width: 150,\n    padding: `${theme.spacing(3)}px`,\n    borderRadius: `${theme.spacing(2)}px`\n  },\n  img: {\n    height: 0,\n    paddingTop: '100%'\n  }\n}))\n\nexport default function Home () {\n  const theme = useTheme()\n  const classes = styles(theme)\n  const cards = [\n    {\n      to: '/inductionCooktop',\n      img: 'assets/home/cooktop.png',\n      text: 'Induction'\n    },\n    {\n      to: '/riceCooker',\n      img: 'assets/common/rice.png',\n      text: 'Rice Cooker'\n    },\n    {\n      to: '/weighingScale',\n      img: 'assets/home/weighingScale.png',\n      text: 'Weighing Scale'\n    },\n    {\n      to: '/spiceRack',\n      img: 'assets/home/spiceDispenser.png',\n      text: 'Spice Dispenser'\n    },\n    {\n      to: '/liquidStation',\n      img: 'assets/home/liquidStation.png',\n      text: 'Liquid Station'\n    },\n    {\n      to: '/testRecipe',\n      img: 'assets/home/cooking.png',\n      text: 'Cooking Recipe'\n    }\n  ]\n\n  return (\n    <>\n      {/* TODO: Replace Ana with user's name from state */}\n      <Typography variant='body1' align='center'>\n        Hey Ana, what are you looking for?\n      </Typography>\n      <Divider />\n      <Grid container direction='row' justify='center' alignItems='center'>\n        {cards.map(card => (\n          <Grid item md={4} key={card.to}>\n            <NavLink style={{ textDecoration: 'none' }} to={card.to}>\n              {/* TODO: On hover, background color to translucent orange */}\n              <Card elevation={5} className={classes.wrapper}>\n                <CardMedia image={card.img} className={classes.img} />\n                <CardContent align='center'>\n                  <Typography variant='caption'>{card.text}</Typography>\n                </CardContent>\n              </Card>\n            </NavLink>\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Box,\n  Grid,\n  Typography,\n  makeStyles,\n  useTheme,\n  Card,\n  CardMedia,\n  CardContent\n} from '@material-ui/core'\n\nimport recipesData from '../data/recipes.json'\n\nconst iconGridStyles = makeStyles({\n  grid: {\n    width: '100%',\n    height: '100%',\n    textAlign: 'center'\n  },\n  img: {\n    width: '70%',\n    height: '70%',\n    margin: '15%'\n  }\n})\n\nconst recipeGridStyles = makeStyles(theme => ({\n  grid: {\n    flexWrap: 'nowrap',\n    overflowX: 'auto',\n    // Promote the list into its own layer on Chrome.\n    // This costs memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  card: {\n    marginTop: `${theme.spacing(2)}px`,\n    width: 200,\n    padding: `${theme.spacing(2)}px`,\n    backgroundColor: 'transparent'\n  },\n  img: {\n    height: 0,\n    paddingTop: '125%',\n    borderRadius: '5%'\n  }\n}))\n\nconst iconList = [\n  { src: 'assets/icons/breakfast.svg', caption: 'Breakfast' },\n  { src: 'assets/icons/lunch.svg', caption: 'Lunch' },\n  { src: 'assets/icons/meal.svg', caption: 'Dinner' },\n  { src: 'assets/icons/soup.svg', caption: 'Soup' },\n  { src: 'assets/icons/rice.svg', caption: 'Rice' },\n  { src: 'assets/icons/curry.svg', caption: 'Curry' }\n]\n\nexport default function Recipes () {\n  const [recipes, setRecipes] = useState({})\n  const iconClasses = iconGridStyles(useTheme())\n  const recipeClasses = recipeGridStyles(useTheme())\n\n  // TODO: We need to implement this in such a way that\n  // the recipes are loaded from an external source\n  function getRecipes () {\n    return recipesData\n  }\n  // TODO: Use `useEffect` to get Recipes instead of mapping\n  // from getRecipes during render itself\n\n  return (\n    <Box m={2}>\n      <Box mt={3} mb={5}>\n        <Box mb={2}>\n          <Typography variant='h5'>\n            Let's cook something great today!\n          </Typography>\n        </Box>\n        <Grid\n          container\n          direction='row'\n          justify='flex-start'\n          alignItems='center'\n        >\n          {iconList.map(icon => (\n            <Box\n              key={icon.caption}\n              borderRadius='50%'\n              border={1}\n              height={52}\n              width={52}\n              m={1}\n            >\n              <Grid item className={iconClasses.grid}>\n                <img\n                  src={icon.src}\n                  className={iconClasses.img}\n                  alt={icon.caption}\n                />\n                <Typography variant='caption'>{icon.caption}</Typography>\n              </Grid>\n            </Box>\n          ))}\n        </Grid>\n      </Box>\n      <Box>\n        <Typography variant='h5'>You may like</Typography>\n        {/* TODO: Get rid of the scrollbar */}\n        <Box mr={-4} ml={-4} mt={-2}>\n          <Grid\n            container\n            direction='row'\n            justify='flex-start'\n            alignItems='center'\n            className={recipeClasses.grid}\n          >\n            {getRecipes().map(recipe => (\n              <Grid item key={recipe.id}>\n                <Link to={`/recipes/${recipe.id}`}>\n                  <Card className={recipeClasses.card} elevation={0}>\n                    <CardMedia\n                      image={recipe.src}\n                      className={recipeClasses.img}\n                    />\n                    <CardContent align='center'>\n                      <Typography variant='caption'>{recipe.name}</Typography>\n                    </CardContent>\n                  </Card>\n                </Link>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { Typography, Box, Button, Grid, makeStyles } from '@material-ui/core'\n\nimport recipes from '../data/recipes.json'\nimport theme from '../config/theme'\n\nconst styles = makeStyles(theme => ({\n  columnItem: {\n    width: '100%'\n  },\n  buttonGrid: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  pulledItem: {\n    width: '40%',\n    marginRight: '5%',\n    marginLeft: '5%'\n  },\n  forceFullHeight: {\n    height: `${theme.constants.windowHeight}px`\n  },\n  img: {\n    height: `${theme.constants.windowHeight}px`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  }\n}))\n\nfunction getRecipe (recipeId) {\n  for (let i = 0; i < recipes.length; i++) {\n    if (recipes[i].id === recipeId) {\n      return recipes[i]\n    }\n  }\n  return false\n}\n\nexport default function Recipe () {\n  const classes = styles(theme)\n  const recipeId = useParams().recipeId\n  const recipe = getRecipe(recipeId)\n\n  if (recipe) {\n    return (\n      // **NOTE: Offset the Grid wrapper margin from Home component\n      <Box m={-2} className={classes.forceFullHeight}>\n        <Grid\n          container\n          direction='row'\n          justify='center'\n          alignItems='center'\n          className={classes.forceFullHeight}\n        >\n          <Grid item md={5}>\n            <Box\n              overflow='hidden'\n              className={classes.img}\n              style={{ backgroundImage: `url(${recipe.src})` }}\n            >\n              <Grid\n                container\n                direction='column'\n                justify='space-between'\n                alignItems='center'\n                className={classes.forceFullHeight}\n              >\n                <Grid item className={classes.columnItem}>\n                  <Typography>Gonna be some nav stuff</Typography>\n                </Grid>\n                <Grid item className={classes.columnItem}>\n                  <Grid\n                    container\n                    direction='row'\n                    justify='center'\n                    alignItems='center'\n                    className={classes.buttonGrid}\n                  >\n                    <Grid item className={classes.pulledItem}>\n                      <Button\n                        variant='contained'\n                        color='secondary'\n                        style={{ width: '100%' }}\n                      >\n                        Cook Now\n                      </Button>\n                    </Grid>\n                    <Grid item className={classes.pulledItem}>\n                      <Button\n                        variant='contained'\n                        color='secondary'\n                        style={{ width: '100%' }}\n                      >\n                        Schedule Dish\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n          </Grid>\n          <Grid item md={7}>\n            <Typography variant='h4' align='center'>\n              {recipe.name}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    )\n  } else {\n    return <Typography variant='h2'>404</Typography>\n  }\n}\n","import React, { useRef, useEffect } from 'react'\nimport { Box, makeStyles, useTheme, Typography, Grid } from '@material-ui/core'\n\n// Number of dots on the cooktop circle\nconst numDots = 15\n// Width/height of each dot in pixels\nconst dotDim = 10\n\nconst graphStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    width: 200,\n    height: 200,\n    margin: 'calc(100px / 2 + 0px)',\n    border: '10px solid gray',\n    borderRadius: '50%'\n  },\n  dots: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: `${dotDim}px`,\n    height: `${dotDim}px`,\n    margin: `calc(-${dotDim}px / 2)`,\n    background: 'lightgray',\n    borderRadius: '50%'\n  }\n}))\nexport default function InductionCooktop (props) {\n  const graphClasses = graphStyles(useTheme())\n  const graph = useRef(null)\n\n  useEffect(() => {\n    const ciclegraph = graph.current\n    const circleElements = ciclegraph.childNodes\n\n    let angle = 360 - 90\n    // .length - 1 because first element is for content\n    const dangle = 360 / (circleElements.length - 1)\n    // Gutter width MUST be equal to width(diameter) of dot\n    const innerGutter = dotDim\n\n    // Skip first element because it's for content (no rotation applied)\n    for (let i = 1; i < circleElements.length; i++) {\n      const circle = circleElements[i]\n      angle += dangle\n      circle.style.transform = `rotate(${angle}deg) translate(${ciclegraph.clientWidth /\n        2 -\n        innerGutter}px) rotate(-${angle}deg)`\n    }\n  }, [])\n\n  const dots = []\n  for (let i = 0; i < numDots; i++) {\n    dots.push(<Box key={`dot-${i}`} className={graphClasses.dots} />)\n  }\n\n  return (\n    <Box className={graphClasses.root} ref={graph}>\n      <Box className={graphClasses.content}>\n        <Typography\n          variant='h5'\n          align='center'\n          style={{ marginTop: '50%', transform: 'translateY(-50%)' }}\n        >\n          {props.content}\n        </Typography>\n      </Box>\n      {dots}\n    </Box>\n  )\n}\n","import React from 'react'\nimport Cooktop from '../components/Cooktop'\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Grid,\n  Typography,\n  Box,\n  Divider,\n  makeStyles\n} from '@material-ui/core'\nimport theme from '../config/theme'\n\nconst styles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(1),\n    height: 120,\n    width: 80,\n    padding: theme.spacing(1)\n  },\n  content: {\n    padding: `${theme.spacing(1)}px 0px ${theme.spacing(1)}px 0px !important`\n  },\n  media: {\n    height: 0,\n    paddingTop: '100%'\n  }\n}))\n\nexport default function InductionCooktop () {\n  const classes = styles(theme)\n  const cards = [\n    {\n      img: '/assets/common/milk.png',\n      text: 'Baby Bottle'\n    },\n    {\n      img: '/assets/common/hotspring.png',\n      text: 'Soup'\n    },\n    {\n      img: '/assets/common/meat.png',\n      text: 'Chicken'\n    },\n    {\n      img: '/assets/common/rice.png',\n      text: 'Rice'\n    }\n  ]\n  return (\n    <>\n      <Typography align='center' variant='h3' color='secondary'>\n        Induction Cooktop\n      </Typography>\n      <Divider />\n      <Grid\n        container\n        direction='row'\n        justify='flex-start'\n        alignItems='flex-start'\n      >\n        <Grid item md={5}>\n          <Grid\n            container\n            direction='column'\n            justify='flex-start'\n            alignItems='center'\n          >\n            <Grid item>\n              <Cooktop content='0 °C' />\n            </Grid>\n            <Grid item>\n              <Grid\n                container\n                direction='row'\n                justify='center'\n                alignItems='center'\n                spacing={5}\n              >\n                <Grid item>\n                  <img\n                    style={{ width: '30px', height: '30px' }}\n                    src='/assets/cooktop/minus.png'\n                    alt='test'\n                  />\n                </Grid>\n                <Grid item>\n                  <img\n                    style={{ width: '50px', height: '50px' }}\n                    src='/assets/cooktop/power.png'\n                    alt='test'\n                  />\n                </Grid>\n                <Grid item>\n                  <img\n                    style={{ width: '30px', height: '30px' }}\n                    src='/assets/cooktop/add.png'\n                    alt='test'\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item md={7}>\n          <Box p={2}>\n            <Typography variant='h4' align='center'>\n              Presets\n            </Typography>\n            <Grid\n              container\n              direction='row'\n              justify='space-evenly'\n              alignItems='flex-start'\n              spacing={2}\n            >\n              {cards.map(card => (\n                <Grid item key={card.text}>\n                  <Card className={classes.root}>\n                    <CardMedia className={classes.media} image={card.img} />\n                    <CardContent className={classes.content} align='center'>\n                      <Typography variant='caption'>{card.text}</Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\n\nconst CookerContext = React.createContext()\n\nexport default CookerContext\n","import React, { useContext } from 'react'\nimport { Button, Grid } from '@material-ui/core'\nimport CookerContext from './CookerContext'\n\n// TODO: Can refactor this massively\n\nfunction MilkPreset () {\n  const context = useContext(CookerContext)\n  return (\n    <Grid item>\n      <Button\n        variant='outlined'\n        color='secondary'\n        disabled={context.flowSelected}\n        onClick={() => {\n          context.setFlow('boil')\n        }}\n      >\n        Boil\n      </Button>\n    </Grid>\n  )\n}\n\nfunction SoupPreset () {\n  const context = useContext(CookerContext)\n  return (\n    <Grid item>\n      <Button\n        variant='outlined'\n        color='secondary'\n        disabled={context.flowSelected}\n        onClick={() => {\n          context.setFlow('boil')\n        }}\n      >\n        Boil\n      </Button>\n    </Grid>\n  )\n}\n\nfunction MeatPreset () {\n  const context = useContext(CookerContext)\n  return (\n    <>\n      <Grid item>\n        <Button\n          variant='outlined'\n          color='secondary'\n          disabled={context.flowSelected}\n          onClick={() => {\n            context.setFlow('cook')\n          }}\n        >\n          Cook\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button\n          variant='outlined'\n          color='secondary'\n          disabled={context.flowSelected}\n          onClick={() => {\n            context.setFlow('warm')\n          }}\n        >\n          Warm\n        </Button>\n      </Grid>\n    </>\n  )\n}\n\nfunction RicePreset () {\n  const context = useContext(CookerContext)\n  return (\n    <Grid item>\n      <Button\n        variant='outlined'\n        color='secondary'\n        disabled={context.flowSelected}\n        onClick={() => {\n          context.setFlow('cook')\n        }}\n      >\n        Cook\n      </Button>\n    </Grid>\n  )\n}\n\nexport default {\n  milk: {\n    img: '/assets/common/milk.png',\n    text: 'Milk',\n    buttonGrid: <MilkPreset />\n  },\n  soup: {\n    img: '/assets/common/hotspring.png',\n    text: 'Soup',\n    buttonGrid: <SoupPreset />\n  },\n  meat: {\n    img: '/assets/common/meat.png',\n    text: 'Meat',\n    buttonGrid: <MeatPreset />\n  },\n  something: {\n    img: '/assets/common/rice.png',\n    text: 'Rice',\n    buttonGrid: <RicePreset />\n  }\n}\n","import React from 'react'\n\nconst FlowContext = React.createContext()\n\nexport default FlowContext\n","import React, { useContext } from 'react'\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  CardMedia,\n  Typography,\n  useTheme,\n  makeStyles,\n  Box\n} from '@material-ui/core'\nimport FlowContext from './FlowContext'\n\nconst cardStyles = makeStyles(theme => ({\n  tileWrapper: {\n    width: 75,\n    height: 90,\n    margin: `${theme.spacing(0.5)}px`\n  },\n  contentWrapper: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  media: {\n    height: 40,\n    width: 40,\n    marginLeft: '50%',\n    transform: 'translateX(-50%)',\n    marginTop: theme.spacing(2)\n  }\n}))\n\nexport default function RicePresets () {\n  const cardClasses = cardStyles(useTheme())\n  const context = useContext(FlowContext)\n\n  const cards = [\n    {\n      img: '/assets/ricecooker/white.png',\n      text: 'White Rice',\n      key: 'white'\n    },\n    {\n      img: '/assets/ricecooker/brown.png',\n      text: 'Brown Rice',\n      key: 'brown'\n    },\n    {\n      img: '/assets/ricecooker/black.png',\n      text: 'Black Rice',\n      key: 'black'\n    },\n    {\n      img: '/assets/ricecooker/basmati.png',\n      text: 'Basmati Rice',\n      key: 'basmati'\n    },\n    {\n      img: '/assets/ricecooker/sticky.png',\n      text: 'Sticky Rice',\n      key: 'sticky'\n    }\n  ]\n  return (\n    <>\n      <CardHeader title='What do you want to cook?' />\n      <CardContent>\n        <Grid container direction='row' justify='center' alignItems='center'>\n          {cards.map(card => (\n            <Box onClick={() => context.moveFlow(card.key)} key={card.text}>\n              <Grid item>\n                <Card className={cardClasses.tileWrapper}>\n                  <CardMedia image={card.img} className={cardClasses.media} />\n                  <CardContent className={cardClasses.contentWrapper}>\n                    <Typography variant='caption'>{card.text}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Box>\n          ))}\n        </Grid>\n      </CardContent>\n    </>\n  )\n}\n","import React, { useContext } from 'react'\n\nimport { CardContent, Typography, CardHeader, Button } from '@material-ui/core'\n\nimport FlowContext from './FlowContext'\n\nexport default function NeededMaterials (props) {\n  // TODO: We need to get needed materials based on what they're cooking\n  const context = useContext(FlowContext)\n  return (\n    <>\n      <CardHeader title='Here is what you need' />\n      <CardContent>\n        <Typography>{`Selected Preset: ${props.selectedPreset}`}</Typography>\n        <Button\n          variant='outlined'\n          onClick={() => {\n            context.moveFlow('confirmed')\n          }}\n        >\n          Continue\n        </Button>\n      </CardContent>\n    </>\n  )\n}\n","import React, { useContext } from 'react'\nimport { CardContent, Typography, Button, Grid } from '@material-ui/core'\nimport FlowContext from './FlowContext'\n\nexport default function Confirmation () {\n  const context = useContext(FlowContext)\n\n  return (\n    <CardContent>\n      <Typography variant='body1'>\n        Make sure all materials are in the vessel. Place the vessel inside the\n        cooker and close the lid.\n      </Typography>\n      <Grid container justify='center' alignItems='center'>\n        <Grid item style={{ width: '100%' }}>\n          <Button\n            variant='outlined'\n            onClick={() => {\n              context.moveFlow('start')\n            }}\n            color='secondary'\n          >\n            Start\n          </Button>\n        </Grid>\n        <Grid item style={{ width: '100%' }}>\n          <Button\n            variant='outlined'\n            onClick={() => {\n              context.moveFlow('schedule')\n            }}\n          >\n            Schedule\n          </Button>\n        </Grid>\n      </Grid>\n    </CardContent>\n  )\n}\n","import React from 'react'\nimport { Typography, CardContent } from '@material-ui/core'\n\nexport default function Schedule () {\n  // TODO: If they try to cancel here, ask for confirmation.\n  return (\n    <CardContent>\n      <Typography body='h5'>Can you smell what the Rock is cookin'!</Typography>\n      <Typography body='body1'>{`Approximately ${5} minutes left`}</Typography>\n    </CardContent>\n  )\n}\n","import React, { useState, useContext } from 'react'\n\nimport { Button, Card, useTheme, makeStyles } from '@material-ui/core'\n\nimport RicePresets from './RicePresets'\nimport NeededMaterials from './NeededMaterials'\nimport Confirmation from './Confirmation'\n\nimport CookerContext from '../CookerContext'\nimport FlowContext from './FlowContext'\nimport Schedule from './Schedule'\n\nconst styles = makeStyles(theme => ({\n  wrapper: {\n    margin: 'auto',\n    marginTop: `${theme.spacing(5)}px`,\n    width: '300px',\n    '& .MuiButton-root': {\n      marginTop: `${theme.spacing(1)}px`,\n      width: '100%'\n    }\n  }\n}))\n\nexport default function CookFlow () {\n  const context = useContext(CookerContext)\n  const classes = styles(useTheme())\n\n  const [pointer, setPointer] = useState(1)\n  const [selectedPreset, selectPreset] = useState(null)\n\n  function moveFlow (body) {\n    if (pointer === 3) {\n      if (body === 'start') {\n        // Start the cooking\n      } else if (body === 'schedule') {\n        // Handle schedule flow\n      }\n      setPointer(4)\n    } else if (pointer === 2) {\n      // Confirmed, start the timer\n      setPointer(3)\n    } else if (pointer === 1) {\n      // Supposed to pick a preset\n      selectPreset(body)\n      setPointer(2)\n    }\n  }\n\n  function Wrapper (inner) {\n    return (\n      <FlowContext.Provider\n        value={{\n          moveFlow\n        }}\n      >\n        <Card className={classes.wrapper}>\n          <Button\n            onClick={() => {\n              // Cancel this flow\n              context.setFlow(null)\n            }}\n            variant='contained'\n            color='secondary'\n            style={{\n              marginTop: 0,\n              borderBottomLeftRadius: 0,\n              borderBottomRightRadius: 0\n            }}\n          >\n            Cancel\n          </Button>\n          {inner}\n        </Card>\n      </FlowContext.Provider>\n    )\n  }\n\n  if (pointer === 1) {\n    return Wrapper(<RicePresets />)\n  } else if (pointer === 2) {\n    return Wrapper(<NeededMaterials selectedPreset={selectedPreset} />)\n  } else if (pointer === 3) {\n    return Wrapper(<Confirmation />)\n  } else if (pointer === 4) {\n    return Wrapper(<Schedule />)\n  }\n}\n","import React, { useContext } from 'react'\n\nimport { Box } from '@material-ui/core'\n\nimport CookFlow from './CookFlow'\n\nfunction CookFlowContext () {\n  return (\n    <Box width='100%' height='100%' alignContent='center'>\n      <CookFlow />\n    </Box>\n  )\n}\n\nexport default {\n  cook: {\n    component: <CookFlowContext />\n  }\n}\n","import React, { useState } from 'react'\nimport Cooktop from '../../components/Cooktop'\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Grid,\n  Typography,\n  Box,\n  Divider,\n  makeStyles,\n  useTheme\n} from '@material-ui/core'\n\nimport presetFlows from './PresetFlows'\nimport flows from './Flows'\n\nimport CookerContext from './CookerContext'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(1),\n    height: 120,\n    width: 80,\n    padding: theme.spacing(1)\n  },\n  content: {\n    padding: `${theme.spacing(1)}px 0px ${theme.spacing(1)}px 0px !important`\n  },\n  media: {\n    height: 0,\n    paddingTop: '100%'\n  }\n}))\n\nexport default function RiceCooker () {\n  const theme = useTheme()\n  const classes = useStyles(theme)\n  const [flowSelected, setFlowSelected] = useState(false)\n  const [selectedPreset, selectPreset] = useState('milk')\n  const [selectedFlow, selectFlow] = useState(null)\n\n  function setFlow (flow) {\n    console.log(`Setting flow with: ${flow}`)\n    if (!flow) {\n      // Flow will be false when an already set flow\n      // is cancelled before completion\n      setFlowSelected(false)\n      selectFlow(null)\n      // Selecting milk as default preset (first in the list)\n      selectPreset('milk')\n    } else {\n      // Some flow was defined, set it follow it\n      setFlowSelected(true)\n      selectFlow(flow)\n    }\n  }\n\n  return (\n    <CookerContext.Provider\n      value={{\n        selectedPreset,\n        selectedFlow,\n        flowSelected,\n        setFlow\n      }}\n    >\n      <Typography align='center' variant='h3' color='secondary'>\n        Rice Cooker\n      </Typography>\n      <Divider />\n      <Grid\n        container\n        direction='row'\n        justify='flex-start'\n        alignItems='flex-start'\n      >\n        <Grid item md={5}>\n          <Grid\n            container\n            direction='column'\n            justify='flex-start'\n            alignItems='center'\n          >\n            <Grid item>\n              <Cooktop content='0 °C' />\n            </Grid>\n            <Grid item>\n              <Grid\n                container\n                direction='row'\n                justify='center'\n                alignItems='center'\n                spacing={3}\n              >\n                {presetFlows[selectedPreset].buttonGrid}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item md={7}>\n          {flowSelected ? (\n            flows[selectedFlow].component\n          ) : (\n            <Box p={2}>\n              <Typography variant='h4' align='center'>\n                Presets\n              </Typography>\n              <Grid\n                container\n                direction='row'\n                justify='space-evenly'\n                alignItems='flex-start'\n                spacing={2}\n              >\n                {Object.keys(presetFlows).map(flowKey => (\n                  <Grid item key={presetFlows[flowKey].text}>\n                    <Card\n                      className={classes.root}\n                      onClick={() => selectPreset(flowKey)}\n                      style={\n                        // TODO: Doesn't work\n                        selectedFlow === flowKey\n                          ? { backgroundColor: theme.palette.secondary.main }\n                          : null\n                      }\n                    >\n                      <CardMedia\n                        className={classes.media}\n                        image={presetFlows[flowKey].img}\n                      />\n                      <CardContent className={classes.content} align='center'>\n                        <Typography variant='caption'>\n                          {presetFlows[flowKey].text}\n                        </Typography>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n              </Grid>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </CookerContext.Provider>\n  )\n}\n","/* eslint-disable no-unused-vars */\n// A conversion bridge to get MQTT Publish messages as needed by the firmaware.\n// Message structure\n// [ \"CONTROL_STRING\", \"ACTION_STRING\", ...PARAMS ]\n\nfunction generateRandomString (length) {\n  var result = ''\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  var charactersLength = characters.length\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength))\n  }\n  return result\n}\n\n// Contrl Dictionary\nconst ControlPubDictionary = {\n  MQTT_RICE_CTRL: '20',\n  MQTT_INDUCTION_CTRL: '21',\n  MQTT_SPICE_CTRL: '22',\n  MQTT_COOK_CTRL: '23',\n  MQTT_OILWAT_CTRL: '24',\n  MQTT_LASTCMD_STAT: '25',\n  MQTT_LASTCMD_VAL: '26',\n  MQTT_STATUS1: '27', // automatic\n  MQTT_STATUS2: '28', // toogle\n  MQTT_BIST_RESP_CTRL: '29'\n}\n\n// Spice Rack Control\nconst SpicePubDictionary = {\n  SPICE_STAT_IDLE: '0',\n  SPICE_STAT_INDEX: '1',\n  SPICE_STAT_WEIGHT: '2',\n  SPICE_STAT_DISPENSE: '3',\n  SPICE_STAT_HOMERACK: '4',\n  SPICE_STAT_HOMEPUSH: '5',\n  SPICE_STAT_WT_TIMEOUT: '6',\n  SPICE_STAT_GRAM: '7',\n  SPICE_STAT_PTYPE1: 8,\n  SPICE_STAT_PTYPE2: 9,\n  SPICE_STAT_PTYPE3: 10,\n  SPICE_STAT_IDLE_STR: 'IDLE',\n  SPICE_STAT_INDEX_STR: 'INDEXING',\n  SPICE_STAT_WEIGHT_STR: 'WEIGHING',\n  SPICE_STAT_DISPENSE_STR: 'DISPENSING',\n  SPICE_STAT_HOMERACK_STR: 'HOMING RACK',\n  SPICE_STAT_HOMEPUSH_STR: 'HOMING PUSH',\n  SPICE_STAT_WT_TIMEOUT_STR: 'WEIGHT_TIMEOUT',\n  SPICE_STAT_GRAM_STR: 'GRAM',\n  SPICE_STAT_PTYPE_STR: 'PTYPE',\n  SPICE_STAT_STR: 'STATE',\n  SPICE_STAT_NULL_STR: 'NULL',\n  SPICE_STAT_UNKNOWN_STR: 'UNKNOWN'\n}\n\n// Induction Rack Control\nconst StirrerPubDictionary = {\n  COOK_STAT_IDLE: 0,\n  COOK_STAT_STIR: 1,\n  COOK_STAT_INDEX: 2,\n  COOK_STAT_HOME: 4,\n  COOK_STAT_STR: 'STATE',\n  COOK_STAT_IDLE_STR: 'IDLE',\n  COOK_STAT_STIR_STR: 'STIRRING',\n  COOK_STAT_INDEX_STR: 'INDEXING',\n  COOK_STAT_COOK_STR: 'COOK',\n  COOK_STAT_NULL_STR: 'NULL',\n  COOK_STAT_UNKNOWN_STR: 'UNKNOWN'\n}\n\nconst IngredientRackPubDictionary = {\n  INGREDIENT_STAT_IDLE: '0',\n  INGREDIENT_STAT_STIR: '1',\n  INGREDIENT_STAT_INDEX: '2',\n  INGREDIENT_STAT_HOME: '4',\n  INGREDIENT_STAT_STR: 'STATE',\n  INGREDIENT_STAT_IDLE_STR: 'IDLE',\n  INGREDIENT_STAT_STIR_STR: 'STIRRING',\n  INGREDIENT_STAT_INDEX_STR: 'INDEXING',\n  INGREDIENT_STAT_COOK_STR: 'COOK',\n  INGREDIENT_STAT_NULL_STR: 'NULL',\n  INGREDIENT_STAT_UNKNOWN_STR: 'UNKNOWN'\n}\n\n// Liquid Station Control\nconst LiquidStationPubDictionary = {\n  OILWAT_STAT_IDLE: 0,\n  OILWAT_STAT_DISPOIL: 1,\n  OILWAT_STAT_DISPWAT: 2,\n  OILWAT_STAT_VOLUME: 3,\n  OILWAT_TIME_STR: 'REM_TIME',\n  OILWAT_STAT_IDLE_STR: 'IDLE',\n  OILWAT_STAT_DISPOIL_STR: 'DISPOIL',\n  OILWAT_STAT_DISPWAT_STR: 'DISPWAT',\n  OILWAT_STAT_LOAD_CELL_STR: 'LC',\n  OILWAT_STAT_NULL_LOAD_CELL_STR: 'NULL',\n  OILWAT_STAT_VOLUME_STR: 'VOL',\n  OILWAT_STAT_UNKNOWN_STR: 'UNKNOWN'\n}\n\nconst RiceCookerPubDictionary = {\n  LOOP_STAT_RICEON: 1 << 2,\n  LOOP_STAT_RICEON_STR: 'ON',\n  LOOP_STAT_RICEOFF_STR: 'OFF',\n  LOOP_STAT_RICEWARM: 1 << 3,\n  LOOP_STAT_RICEWARMON_STR: 'WARMON',\n  LOOP_STAT_RICEWARMOFF_STR: 'WARMOFF',\n  LOOP_STAT_TEMP_STR: 'TEMP',\n  LOOP_STAT_RICE_TEMP_STR: 'RICETEMP',\n  LOOP_STAT_NULL: 'NULL'\n}\n\nexport const InductionPubDictionary = {\n  LOOP_STAT_INDRICE_STATE: 'STATE',\n  LOOP_STAT_INDON: 1 << 0,\n  LOOP_STAT_INDON_STR: 'ON',\n  LOOP_STAT_INDOFF_STR: 'OFF',\n  LOOP_STAT_INDRLYON: 1 << 1,\n  LOOP_STAT_INDRLYON_STR: 'RLYON',\n  LOOP_STAT_INDRLYOFF_STR: 'RLYOFF',\n  LOOP_STAT_IND_TEMP_STR: 'INDTEMP'\n}\n\nexport const PubSubDictionary = {\n  MQTT_BIST_RESP: '1',\n  MQTT_STATUS1: '2',\n  MQTT_STATUS2: '3',\n  MQTT_SPICE_STATUS: '4',\n  MQTT_SPICE_LC: '5',\n  MQTT_SPICE_DATA: '6',\n  MQTT_COOK_STATUS: '7',\n  MQTT_COOK_LC: '8',\n  MQTT_COOK_DATA: '9',\n  MQTT_OILWAT_STATUS: '10',\n  MQTT_RICE_TEMP: '11',\n  MQTT_INDUCTION_TEMP: '12',\n  MQTT_DEV_SRNO: '13',\n  MQTT_SW_VER: '14',\n  MQTT_MAGSNSR_POS: '15',\n  MQTT_LASTCMD_STAT: '16',\n  MQTT_LASTCMD_VAL1: '17',\n  MQTT_LASTCMD_VAL2: '18'\n}\n\nfunction array2Obj (array) {\n  const currentObj = {}\n  const objKey = array.shift()\n  currentObj[objKey] = [...array]\n  // currentObj[\"packetIdentifier\"] = generateRandomString(5)\n  return currentObj\n}\n\nexport function decodePayload (payload) {}\n\nexport function dispenseSpice (index, weight, pushType) {\n  return array2Obj([\n    ControlPubDictionary.MQTT_SPICE_CTRL,\n    SpicePubDictionary.SPICE_STAT_DISPENSE,\n    index,\n    weight,\n    pushType\n  ])\n}\n\nexport function dispenseIngredient (index) {\n  return array2Obj([\n    ControlPubDictionary.MQTT_COOK_CTRL,\n    IngredientRackPubDictionary.INGREDIENT_STAT_INDEX,\n    index\n  ])\n}\n\nexport function homeSpiceRack () {\n  return array2Obj([\n    ControlPubDictionary.MQTT_SPICE_CTRL,\n    SpicePubDictionary.SPICE_STAT_HOMERACK\n  ])\n}\n\nexport function moveSpiceRack2Position (position) {\n  return array2Obj([\n    ControlPubDictionary.MQTT_SPICE_CTRL,\n    SpicePubDictionary.SPICE_STAT_INDEX,\n    position\n  ])\n}\n\nexport function moveIngredientRack2Position (position) {\n  return array2Obj([\n    ControlPubDictionary.MQTT_COOK_CTRL,\n    IngredientRackPubDictionary.INGREDIENT_STAT_INDEX,\n    position\n  ])\n}\n\nexport function dispenseOil (volume) {\n  return array2Obj([\n    ControlPubDictionary.MQTT_OILWAT_CTRL,\n    LiquidStationPubDictionary.OILWAT_STAT_DISPOIL,\n    volume\n  ])\n}\n\nexport function dispenseWater (volume) {\n  return array2Obj([\n    ControlPubDictionary.MQTT_OILWAT_CTRL,\n    LiquidStationPubDictionary.OILWAT_STAT_DISPWAT,\n    volume\n  ])\n}\n\nexport function switchOffRiceCooker () {\n  return array2Obj([\n    ControlPubDictionary.MQTT_RICE_CTRL,\n    InductionPubDictionary.LOOP_STAT_RICEON_STR,\n    'ON'\n  ])\n}\n\nexport function switchOnRiceCooker () {\n  return array2Obj([\n    ControlPubDictionary.MQTT_RICE_CTRL,\n    InductionPubDictionary.LOOP_STAT_RICEON_STR,\n    'OFF'\n  ])\n}\n\nexport function setRiceCookerTemperature (temperature) {\n  return array2Obj([\n    ControlPubDictionary.MQTT_RICE_CTRL,\n    InductionPubDictionary.LOOP_STAT_RICE_TEMP_STR,\n    temperature\n  ])\n}\n\nexport function setInductionTemperature (temperature) {\n  return array2Obj([ControlPubDictionary.MQTT_INDUCTION_CTRL, temperature])\n}\n\nexport function switchOnStirring () {\n  return array2Obj([\n    ControlPubDictionary.MQTT_COOK_CTRL,\n    StirrerPubDictionary.COOK_STAT_STIR,\n    1\n  ])\n}\n\nexport function switchOffStirring () {\n  return array2Obj([\n    ControlPubDictionary.MQTT_COOK_CTRL,\n    StirrerPubDictionary.COOK_STAT_STIR,\n    0\n  ])\n}\n","import React, { Component } from 'react'\nimport { subscribe } from 'mqtt-react'\nimport * as PubSubBridge from '../config/mqttPubSub'\nimport { Box, Paper, Typography, Button } from '@material-ui/core'\nimport { windowHeight } from '../config/theme'\n\nclass MotorController extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      currentSpicePosition: 1,\n      currentIngredientPosition: 0,\n      openWorkingModal: false,\n      payload: '',\n      stirrerState: false\n    }\n  }\n\n  publishMessage (message, topic) {\n    // e.preventDefault();\n    // MQTT client is passed on\n    console.log((topic = 'Riku/Firmware/SubParams'), message)\n    const { mqtt } = this.props\n    mqtt.publish(topic, JSON.stringify(message))\n  }\n\n  homeSpiceRack () {\n    this.publishMessage(PubSubBridge.homeSpiceRack())\n  }\n\n  publishDispenseSpice () {\n    this.publishMessage(\n      PubSubBridge.dispenseSpice(this.state.currentSpicePosition, 20, 1)\n    )\n  }\n\n  pubishMove2PositionSpiceRack (position) {\n    const message = PubSubBridge.moveSpiceRack2Position(position)\n    this.publishMessage(message)\n  }\n\n  publishMove2PositionIngredientRack (position) {\n    const message = PubSubBridge.moveIngredientRack2Position(position)\n    this.publishMessage(message)\n  }\n\n  // publishDispenseSpice (weight) {}\n\n  publishToggleStirrer () {\n    this.setState({ stirrerState: !this.state.stirrerState })\n    if (this.state.stirrerState) {\n      const message = PubSubBridge.switchOffStirring()\n      this.publishMessage(message)\n    } else {\n      const message = PubSubBridge.switchOnStirring()\n      this.publishMessage(message)\n    }\n  }\n\n  publishDispenseLiquid (station, volume) {\n    if (station === 'Oil') {\n      this.publishMessage(PubSubBridge.dispenseOil(volume))\n    } else {\n      this.publishMessage(PubSubBridge.dispenseWater(volume))\n    }\n  }\n\n  componentDidMount () {\n    // eslint-disable-next-line no-unused-vars\n    const { data, mqttProps, mqtt } = this.props\n    mqtt.on('message', data => {\n      console.log(this.props.data)\n      const payload = this.props.data.pop()\n      console.log(payload)\n      // this.setState({scaleStatus: true, currentWeight: parseInt(payload.weight), targetWeight: parseInt(payload.weight)});\n      // if(payload){\n      //     this.setState({\n      //         openWorkingModal: true,\n      //         payload: payload\n      //     });\n      // }\n    })\n  }\n\n  closeModal () {\n    this.setState({ ...this.state, openWorkingModal: false })\n  }\n\n  render () {\n    // TODO: Convert this to functional component !urgent\n    return (\n      <Box height={windowHeight} m={-2} pl={2} pr={2} overflow='scroll'>\n        {this.state.openWorkingModal && (\n          <Paper\n            position='center'\n            modal\n            onClickOutside={this.closeModal}\n            onEsc={this.closeModal}\n          >\n            <Box pad='medium' gap='small' width='medium'>\n              <Typography variant='h3' margin='none'>\n                Got this from Broker\n              </Typography>\n\n              <Box gap='small' align='center'>\n                {Object.keys(this.state.payload).map(key => {\n                  return (\n                    <Typography key={key}>\n                      <strong>{key}</strong>\n                      <span> {this.state.payload[key]}</span> <br />\n                    </Typography>\n                  )\n                })}\n              </Box>\n            </Box>\n          </Paper>\n        )}\n\n        <Paper elevation={2} style={{ marginTop: '16px' }}>\n          <Box p={2}>\n            <Typography>{`Spice Rack - ${this.state.currentSpicePosition}`}</Typography>\n            <Box\n              mt={2}\n              direction='row'\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Button variant='outlined' onClick={() => this.homeSpiceRack()}>\n                Home\n              </Button>\n              <Button\n                variant='outlined'\n                onClick={() => this.publishDispenseSpice()}\n              >\n                Download\n              </Button>\n            </Box>\n            <Box direction='row' display='flex' flexWrap='wrap' m={2}>\n              {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(position => {\n                return (\n                  <Button\n                    key={position}\n                    variant='contained'\n                    style={{ margin: 5, padding: 5, width: 30 }}\n                    onClick={() => this.pubishMove2PositionSpiceRack(position)}\n                  >\n                    {position}\n                  </Button>\n                )\n              })}\n            </Box>\n          </Box>\n        </Paper>\n        <Paper elevation={2} style={{ marginTop: '16px' }}>\n          <Box p={2}>\n            <Typography>{`Ingredient Rack - ${this.state.currentIngredientPosition}`}</Typography>\n            <Box\n              mt={2}\n              direction='row'\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Button\n                variant='outlined'\n                onClick={() => this.publishMessage('', {})}\n              >\n                Home\n              </Button>\n              <Button\n                variant='outlined'\n                onClick={() => this.publishToggleStirrer()}\n              >\n                Download\n              </Button>\n            </Box>\n            <Box direction='row' display='flex' flexWrap='wrap' m={2}>\n              {[1, 2, 3, 4, 5, 6, 7, 8].map(position => {\n                return (\n                  <Button\n                    onClick={() =>\n                      this.publishMove2PositionIngredientRack(position)\n                    }\n                    key={position}\n                    variant='contained'\n                    style={{ margin: 5, padding: 5, width: 30 }}\n                  >\n                    {position}\n                  </Button>\n                )\n              })}\n            </Box>\n          </Box>\n        </Paper>\n        <Paper elevation={2} style={{ marginTop: '16px' }}>\n          <Box p={2}>\n            <Typography>Oil Station</Typography>\n            <Box\n              mt={2}\n              direction='row'\n              style={{ display: 'flex', flexWrap: 'wrap', justifyContent: '' }}\n            >\n              {[10, 20, 30].map(volume => {\n                return (\n                  <Button\n                    key={volume}\n                    variant='contained'\n                    style={{ margin: 5, padding: 5, width: 60 }}\n                    onClick={() => this.publishDispenseLiquid('Oil', volume)}\n                  >\n                    {`${volume}ml`}\n                  </Button>\n                )\n              })}\n            </Box>\n          </Box>\n        </Paper>\n        <Paper elevation={2} style={{ marginTop: '16px' }}>\n          <Box p={2}>\n            <Typography>Water Station</Typography>\n            <Box\n              mt={2}\n              direction='row'\n              style={{ display: 'flex', flexWrap: 'wrap', justifyContent: '' }}\n            >\n              {[10, 20, 30].map(volume => {\n                return (\n                  <Button\n                    key={volume}\n                    variant='contained'\n                    style={{ margin: 5, padding: 5, width: 60 }}\n                    onClick={() => this.publishDispenseLiquid('Water', volume)}\n                  >\n                    {`${volume}ml`}\n                  </Button>\n                )\n              })}\n            </Box>\n          </Box>\n        </Paper>\n        <Box height='small' />\n      </Box>\n    )\n  }\n}\nexport default subscribe({\n  topic: 'Riku/Firmware/PubAll'\n})(MotorController)\n","import {\n  Home,\n  Recipes,\n  Recipe,\n  InductionCooktop,\n  RiceCooker,\n  Dashboard\n} from '../pages'\n\nconst paths = [\n  {\n    path: '/',\n    exact: true,\n    component: Home\n  },\n  {\n    path: '/recipes',\n    exact: true,\n    component: Recipes\n  },\n  {\n    path: '/recipes/:recipeId',\n    component: Recipe\n  },\n  {\n    path: '/inductionCooktop',\n    exact: true,\n    component: InductionCooktop\n  },\n  {\n    path: '/riceCooker',\n    exact: true,\n    component: RiceCooker\n  },\n  {\n    path: '/dev',\n    component: Dashboard\n  },\n  {\n    path: '',\n    component: Home\n  }\n]\n\n// **NOTE: This path should always be at the end\n// paths.push()\n\nexport default paths\n\n/* <Route path='/recipes' component={Recipes} />\n  <Route path='/recipe/:recipeId' component={Recipe} />\n  <Route path='/weighingScale' component={WeighingScale} />\n  <Route path='/inductionCooktop' component={InductionCooktop} />\n  <Route path='/liquidStation' component={LiquidStation} />\n  <Route path='/spiceRack' component={SpiceRack} />\n  <Route path='/riceCooker' component={RiceCooker} />\n  <Route path='/pantry' component={Pantry} />\n  <Route path='/motorController' component={MotorController} />\n  <Route path='/scheduler' component={Scheduler} />\n  <Route\n    path='/preCookPipeline/:recipeId'\n    component={PreCookPipeline}\n  />\n  <Route path='/testRecipe' component={TestRecipe} /> */\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Connector } from 'mqtt-react'\nimport { Box, Grid, ThemeProvider, CssBaseline } from '@material-ui/core'\n\nimport Navigation from './components/Navigation'\n\nimport getTheme from './config/theme'\nimport routes from './config/routes'\n\n// const MQTT_ADDRESS = 'ws://localhost:9000'\n\nfunction App () {\n  const theme = getTheme({ paletteType: 'light' })\n  return (\n    <Connector mqttProps='ws://localhost:8083'>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router>\n          <Grid\n            container\n            direction='row'\n            justify='flex-start'\n            alignItems='flex-start'\n            style={{\n              height: theme.constants.windowHeight\n            }}\n          >\n            <Grid item style={{ height: '100%' }} md={1}>\n              <Navigation />\n            </Grid>\n            <Grid\n              item\n              md={11}\n              style={{\n                height: '100%'\n                // **NOTE: Setting width manually breaks in production\n              }}\n            >\n              <Box\n                p={2}\n                height={theme.constants.windowHeight}\n                overflow='hidden'\n              >\n                <Switch>\n                  {routes.map(route => (\n                    <Route\n                      key={route.path}\n                      exact={route.exact}\n                      path={route.path}\n                      component={route.component}\n                    />\n                  ))}\n                </Switch>\n              </Box>\n            </Grid>\n          </Grid>\n        </Router>\n      </ThemeProvider>\n    </Connector>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}